/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Patient;
import model.PatientDirectory;
import model.Person;
import model.PersonDirectory;

/**
 *
 * @author namangupta
 */
public class ManagePatientJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePatientJPanel
     */
    PersonDirectory personDirectory;
    PatientDirectory patientDirectory;
    
    public ManagePatientJPanel(PatientDirectory patientDirectory, PersonDirectory personDirectory) {
        initComponents();
        this.personDirectory = personDirectory;
        this.patientDirectory = patientDirectory;
        populatePatientsTable(personDirectory.getPersonDirectory());
    }

    
    private void populatePatientsTable(ArrayList<Person> personsList) {
        if(!personsList.isEmpty() || !patientDirectory.getPatients().isEmpty()){
        DefaultTableModel model = (DefaultTableModel) tblManagePatient.getModel();
        model.setRowCount(0);

        for (Person person : personsList) {
            Object[] row = new Object[5];
            row[0] = person;
            row[1] = person.getPatient().getId();
            row[2] = person.getAge();
            row[3] = person.getPatient().getDoctorName();
            row[4] = person.getPatient().getPharmacy();
            model.addRow(row);
        }
        }
        else{
            JOptionPane.showMessageDialog(this, "No Patient found. Please add"
                    + " Patient", "Warning", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblPatient = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblManagePatient = new javax.swing.JTable();
        btnViewPatient = new javax.swing.JButton();
        lblPatientDetail = new javax.swing.JLabel();
        lblPatientNAME = new javax.swing.JLabel();
        txtPatientName = new javax.swing.JTextField();
        lblPatientAge = new javax.swing.JLabel();
        txtPatientAge = new javax.swing.JTextField();
        lblPatientDoctor = new javax.swing.JLabel();
        txtPatientDoctor = new javax.swing.JTextField();
        lblPatientPharmacy = new javax.swing.JLabel();
        txtPatientPharmacy = new javax.swing.JTextField();
        btnUpdatePatient = new javax.swing.JButton();
        btnDeletePatient = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 204));

        lblPatient.setFont(new java.awt.Font("Lucida Grande", 3, 18)); // NOI18N
        lblPatient.setText("UPDATE PATIENT");
        lblPatient.setBorder(new javax.swing.border.MatteBorder(null));

        tblManagePatient.setBackground(new java.awt.Color(255, 255, 102));
        tblManagePatient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "PATIENT NAME", "PATIENT ID", "PATIENT AGE", "PRAFERRED DOCTOR", "PREFFERED PHARMACY"
            }
        ));
        jScrollPane1.setViewportView(tblManagePatient);

        btnViewPatient.setText("VIEW PATIENT");
        btnViewPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientActionPerformed(evt);
            }
        });

        lblPatientDetail.setFont(new java.awt.Font("Lucida Grande", 3, 14)); // NOI18N
        lblPatientDetail.setText("PATIENT DETAILS");

        lblPatientNAME.setText("PATIENT NAME:");

        lblPatientAge.setText("PATIENT AGE:");

        lblPatientDoctor.setText("PREFFERED DOCTOR:");

        lblPatientPharmacy.setText("PREFFERED PHARMACY:");

        btnUpdatePatient.setText("UPDATE PATIENT");
        btnUpdatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdatePatientActionPerformed(evt);
            }
        });

        btnDeletePatient.setText("DELETE PATIENT");
        btnDeletePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePatientActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon("/Users/namangupta/Downloads/reception.png")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnViewPatient)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeletePatient)
                                .addGap(170, 170, 170)
                                .addComponent(lblPatientDetail))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(319, 319, 319)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblPatientDoctor)
                                    .addComponent(lblPatientPharmacy)
                                    .addComponent(lblPatientAge)
                                    .addComponent(lblPatientNAME))
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPatientName, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                    .addComponent(txtPatientDoctor)
                                    .addComponent(txtPatientAge)
                                    .addComponent(txtPatientPharmacy))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnUpdatePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(410, 410, 410))
            .addGroup(layout.createSequentialGroup()
                .addGap(416, 416, 416)
                .addComponent(lblPatient, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPatient)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewPatient)
                    .addComponent(btnDeletePatient)
                    .addComponent(lblPatientDetail))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientNAME)
                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientAge)
                    .addComponent(txtPatientAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientDoctor)
                    .addComponent(txtPatientDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientPharmacy)
                    .addComponent(txtPatientPharmacy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnUpdatePatient, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientActionPerformed
        // TODO add your handling code here:
        
        int selectedRow= tblManagePatient.getSelectedRow();
        
        String updatedName = txtPatientName.getText();
        //int updatedAge = Integer.parseInt(txtPatientAge.getText());
        String prefferedDoctor = txtPatientDoctor.getText();
        String prefferedPharmacy = txtPatientPharmacy.getText();
        
        DefaultTableModel model = (DefaultTableModel) tblManagePatient.getModel();
        Person selectedPerson = (Person) model.getValueAt(selectedRow, 0);
        
        txtPatientName.setText(selectedPerson.getName());
        txtPatientAge.setText(String.valueOf(selectedPerson.getAge()));
        txtPatientDoctor.setText(selectedPerson.getPatient().getDoctorName());
        txtPatientPharmacy.setText(selectedPerson.getPatient().getPharmacy());
    }//GEN-LAST:event_btnViewPatientActionPerformed

    private void btnUpdatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdatePatientActionPerformed
        // TODO add your handling code here:
        

        
        int selectedRow = tblManagePatient.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblManagePatient.getModel();
        Person selectedPerson = (Person) model.getValueAt(selectedRow, 0);
        
        String updatedName = txtPatientName.getText();
        String updatedAge = txtPatientAge.getText();
        String prefferedDoctor = txtPatientDoctor.getText();
        String prefferedPharmacy = txtPatientPharmacy.getText();
        
        Patient p = new Patient();
        p.setDoctorName(prefferedDoctor);
        p.setPharmacy(prefferedPharmacy);
        p.setId(selectedPerson.getPatient().getId());
        
        Person updatedPerson = personDirectory.createPerson();
        updatedPerson.setName(updatedName);
        updatedPerson.setAge(Integer.parseInt(updatedAge));
        
        updatedPerson.setPatient(p);
        
        JOptionPane.showMessageDialog(this, "Patient UPDATED.");
        
        
        personDirectory.deletePerson(selectedPerson);
        
        populatePatientsTable(personDirectory.getPersonDirectory());
        
        txtPatientName.setText("");
        txtPatientAge.setText("");
        txtPatientDoctor.setText("");
        txtPatientPharmacy.setText("");
    }//GEN-LAST:event_btnUpdatePatientActionPerformed

    private void btnDeletePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePatientActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblManagePatient.getSelectedRow();
        
        if(selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblManagePatient.getModel();
        Person selectedPerson = (Person) model.getValueAt(selectedRowIndex, 0);
        personDirectory.deletePerson(selectedPerson);
        patientDirectory.deletePerson(selectedPerson.getPatient());
        JOptionPane.showMessageDialog(this, "Selected Patient Deleted.");
        populatePatientsTable(personDirectory.getPersonDirectory());
    }//GEN-LAST:event_btnDeletePatientActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeletePatient;
    private javax.swing.JButton btnUpdatePatient;
    private javax.swing.JButton btnViewPatient;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPatient;
    private javax.swing.JLabel lblPatientAge;
    private javax.swing.JLabel lblPatientDetail;
    private javax.swing.JLabel lblPatientDoctor;
    private javax.swing.JLabel lblPatientNAME;
    private javax.swing.JLabel lblPatientPharmacy;
    private javax.swing.JTable tblManagePatient;
    private javax.swing.JTextField txtPatientAge;
    private javax.swing.JTextField txtPatientDoctor;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientPharmacy;
    // End of variables declaration//GEN-END:variables
}
